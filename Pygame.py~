import pygame

from Klassen import print_sidesplus, seitenKarten, mittlereKarten, initialize,print_top, print_bot,play_init,initialize_paechen
from Klassen import Spiel, Karten, Spieler, KartenTyp, KartenWert

class MKarte:

    def __init__(self,screen:any,x:int,y:int,bild:any):
        self.x = x
        self.y = y
        self.bild = bild
        self.screen = screen
        self.state = False # 0 = nicht ausgewaehlt, 1 = ausgewaehlt
        self.bewegbar= False










class GUI:
    def __init__(self,game:Spiel):
        pygame.init()
        self.run = True
        self.screen =pygame.display.set_mode((1540,  790))
        self.alle_karten:list[MKarte]= []
        self.centerlist = []
        self.sidelist = []
        self.game = game
        self.Kartentypen = []




    def create_centerlist(self,bild): # ist dazu da die ersten 8 pluse in die mitte zu legen

        for i in range(1,5):
            self.centerlist.append(MKarte(self.screen, 720, i * 150, bild))
        for i in range(1,5):
            self.centerlist.append(MKarte(self.screen, 820, i * 150, bild))
    def create_sidelist(self,bild):

        for i in range(0, 4):
            temp = self.centerlist[i]
            y_wert = temp.y- bild.get_height()/4 #keine ahnung warum durch 4 funkktioniert aber
            x_wert = temp.x - 100
            self.sidelist.append(MKarte(self.screen, x_wert, y_wert, bild))
        for i in range(4, 8):
            temp = self.centerlist[i]
            y_wert = temp.y- bild.get_height()/4
            x_wert = temp.x + bild.get_width()
            self.sidelist.append(MKarte(self.screen, x_wert, y_wert, bild))






    def instance(self):

        placeholder_rueckseite = pygame.image.load('Bilder/Placeholder.png')
        placeholder_rueckseite = self.sizeofkards(placeholder_rueckseite)# ändert die größe zu einer vorherbestimmten größe
        plus=pygame.image.load('Bilder/Plus.png')
        plus=self.sizeofkards(plus,50)





        destination = (100, 100)
        destination2 = (200, 200)
        feld1:MKarte =MKarte(self.screen, 0, 0, placeholder_rueckseite)
        feld2:MKarte =MKarte(self.screen, 200, 500, plus)
        self.alle_karten.append(feld1)
        self.alle_karten.append(feld2)
        self.create_centerlist(plus)
        self.create_sidelist(placeholder_rueckseite)
        self.initate_cards()
        while self.run:
            self.screen.fill((30, 31, 34)) #Alles muss nach dem fill kommen sonst wird es nicht angezeigt
            self.draw(self.alle_karten) # liste wird gezeichnet
            self.draw(self.centerlist)
            self.draw(self.sidelist)
            self.bewege_karte(self.waehle_karteaus())





            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    self.run = False
            pygame.display.update()




    def sizeofkards(self,placeholder_bild,neue_breite=75)->any: # verändert die karte adequat zur eingegebenen breite
        neue_hoehe = placeholder_bild.get_height() * neue_breite/placeholder_bild.get_width()
        kleines_bild = pygame.transform.scale(placeholder_bild, (int(neue_breite), int(neue_hoehe)))
        return kleines_bild
    def draw(self,list):
        for bild in list:
            self.screen.blit(bild.bild, (bild.x, bild.y))
    def waehle_karteaus(self)->MKarte:
        maus = pygame.mouse.get_pos()
        templiste:list[int] =[]
        for i in self.alle_karten: #Pythagoras länge der hypotenuse als werkzeug
            templiste.append(((i.x+i.bild.get_width()/2 - maus[0])**2 + (i.y+i.bild.get_height()/2- maus[1])**2)**0.5) #sqrt (a^2 +b^2) = c

        kl_it=0
        kl_len:int =templiste[0]
        for j in templiste:
            if j <kl_len:
                kl_len = j
                kl_it +=1
        return self.alle_karten[kl_it]


    #geht jedes objekt in der liste durch und vergleicht die distanz mit der Maus(Pytagoras). Die kleinste länge wird zurück gegeben
    def bewege_karte(self,feld):

        if  feld.state== True:
            eingabe = pygame.mouse.get_pos()
            feld.x = eingabe[0]-feld.bild.get_width()/2 # setzt die Position der Karte zu der Mitter der Maus
            feld.y = eingabe[1]-feld.bild.get_height()/2

        if pygame.mouse.get_pressed()[0]:
            pygame.time.delay(250) # delay damit der klick nicht mehrmals gezählt wird
            if feld.state == True: feld.state = False
            else:feld.state = True
        # eingabe ist ein Tupel (x,y)


    def transfer_list_to_middle(self):
        self.centerlist[0].karte = self.game.pik1[-1]
        self.centerlist[1].karte = self.game.pik2[-1]
        self.centerlist[2].karte = self.game.coeur1[-1]
        self.centerlist[3].karte = self.game.coeur2[-1]
        self.centerlist[4].karte = self.game.treff1[-1]
        self.centerlist[5].karte = self.game.treff2[-1]
        self.centerlist[6].karte = self.game.karro1[-1]
        self.centerlist[7].karte = self.game.karro2[-1]

    def initate_cards(self):
        placeholder_rueckseite = pygame.image.load('Bilder/Placeholder.png')
        placeholder_rueckseite = self.sizeofkards(placeholder_rueckseite)# ändert die größe zu einer vorherbestimmten größe

        pik2 = pygame.image.load('Bilder/2_of_spades.png')
        pik2 = self.sizeofkards(pik2)
        couer2 = pygame.image.load('Bilder/2_of_hearts.png')
        couer2 = self.sizeofkards(couer2)
        treff2 = pygame.image.load('Bilder/2_of_clubs.png')
        treff2 = self.sizeofkards(treff2)
        karro2 = pygame.image.load('Bilder/2_of_diamonds.png')
        karro2 = self.sizeofkards(karro2)

        pik3 = pygame.image.load('Bilder/3_of_spades.png')
        pik3 = self.sizeofkards(pik3)
        couer3 = pygame.image.load('Bilder/3_of_hearts.png')
        couer3 = self.sizeofkards(couer3)
        treff3 = pygame.image.load('Bilder/3_of_clubs.png')
        treff3 = self.sizeofkards(treff3)
        karro3 = pygame.image.load('Bilder/3_of_diamonds.png')
        karro3 = self.sizeofkards(karro3)

        pik4 = pygame.image.load('Bilder/4_of_spades.png')
        pik4 = self.sizeofkards(pik4)
        couer4 = pygame.image.load('Bilder/4_of_hearts.png')
        couer4 = self.sizeofkards(couer4)
        treff4 = pygame.image.load('Bilder/4_of_clubs.png')
        treff4 = self.sizeofkards(treff4)
        karro4 = pygame.image.load('Bilder/4_of_diamonds.png')
        karro4 = self.sizeofkards(karro4)

        pik5 = pygame.image.load('Bilder/5_of_spades.png')
        pik5 = self.sizeofkards(pik5)
        couer5 = pygame.image.load('Bilder/5_of_hearts.png')
        couer5 = self.sizeofkards(couer5)
        treff5 = pygame.image.load('Bilder/5_of_clubs.png')
        treff5 = self.sizeofkards(treff5)
        karro5 = pygame.image.load('Bilder/5_of_diamonds.png')
        karro5 = self.sizeofkards(karro5)

        pik6 = pygame.image.load('Bilder/6_of_spades.png')
        pik6 = self.sizeofkards(pik6)
        couer6 = pygame.image.load('Bilder/6_of_hearts.png')
        couer6 = self.sizeofkards(couer6)
        treff6 = pygame.image.load('Bilder/6_of_clubs.png')
        treff6 = self.sizeofkards(treff6)
        karro6 = pygame.image.load('Bilder/6_of_diamonds.png')
        karro6 = self.sizeofkards(karro6)

        pik7 = pygame.image.load('Bilder/7_of_spades.png')
        pik7 = self.sizeofkards(pik7)
        couer7 = pygame.image.load('Bilder/7_of_hearts.png')
        couer7 = self.sizeofkards(couer7)
        treff7 = pygame.image.load('Bilder/7_of_clubs.png')
        treff7 = self.sizeofkards(treff7)
        karro7 = pygame.image.load('Bilder/7_of_diamonds.png')
        karro7 = self.sizeofkards(karro7)

        pik8 = pygame.image.load('Bilder/8_of_spades.png')
        pik8 = self.sizeofkards(pik8)
        couer8 = pygame.image.load('Bilder/8_of_hearts.png')
        couer8 = self.sizeofkards(couer8)
        treff8 = pygame.image.load('Bilder/8_of_clubs.png')
        treff8 = self.sizeofkards(treff8)
        karro8 = pygame.image.load('Bilder/8_of_diamonds.png')
        karro8 = self.sizeofkards(karro8)

        pik9 = pygame.image.load('Bilder/9_of_spades.png')
        pik9 = self.sizeofkards(pik9)
        couer9 = pygame.image.load('Bilder/9_of_hearts.png')
        couer9 = self.sizeofkards(couer9)
        treff9 = pygame.image.load('Bilder/9_of_clubs.png')
        treff9 = self.sizeofkards(treff9)
        karro9 = pygame.image.load('Bilder/9_of_diamonds.png')
        karro9 = self.sizeofkards(karro9)

        pik10 = pygame.image.load('Bilder/10_of_spades.png')
        pik10 = self.sizeofkards(pik10)
        couer10 = pygame.image.load('Bilder/10_of_hearts.png')
        couer10 = self.sizeofkards(couer10)
        treff10 = pygame.image.load('Bilder/10_of_clubs.png')
        treff10 = self.sizeofkards(treff10)
        karro10 = pygame.image.load('Bilder/10_of_diamonds.png')
        karro10 = self.sizeofkards(karro10)

        pik11 = pygame.image.load('Bilder/Jack_of_spades2.png')
        pik11 = self.sizeofkards(pik11)
        couer11 = pygame.image.load('Bilder/Jack_of_hearts2.png')
        couer11 = self.sizeofkards(couer11)
        treff11 = pygame.image.load('Bilder/Jack_of_clubs2.png')
        treff11 = self.sizeofkards(treff11)
        karro11 = pygame.image.load('Bilder/Jack_of_diamonds2.png')
        karro11 = self.sizeofkards(karro11)

        pik12 = pygame.image.load('Bilder/Queen_of_spades2.png')
        pik12 = self.sizeofkards(pik12)
        couer12 = pygame.image.load('Bilder/Queen_of_hearts2.png')
        couer12 = self.sizeofkards(couer12)
        treff12 = pygame.image.load('Bilder/Queen_of_clubs2.png')
        treff12 = self.sizeofkards(treff12)
        karro12 = pygame.image.load('Bilder/Queen_of_diamonds2.png')
        karro12 = self.sizeofkards(karro12)

        pik13 = pygame.image.load('Bilder/King_of_spades2.png')
        pik13 = self.sizeofkards(pik13)
        couer13 = pygame.image.load('Bilder/King_of_hearts2.png')
        couer13 = self.sizeofkards(couer13)
        treff13 = pygame.image.load('Bilder/King_of_clubs2.png')
        treff13 = self.sizeofkards(treff13)
        karro13 = pygame.image.load('Bilder/King_of_diamonds2.png')
        karro13 = self.sizeofkards(karro13)

        pik1 = pygame.image.load('Bilder/Ace_of_spades2.png')
        pik1 = self.sizeofkards(pik1)
        couer1 = pygame.image.load('Bilder/Ace_of_hearts.png')
        couer1 = self.sizeofkards(couer1)
        treff1 = pygame.image.load('Bilder/Ace_of_clubs.png')
        treff1 = self.sizeofkards(treff1)
        karro1 = pygame.image.load('Bilder/Ace_of_diamonds.png')
        karro1 = self.sizeofkards(karro1)

        self.Kartentypen.append([pik1, pik2, pik3, pik4, pik5, pik6, pik7, pik8, pik9, pik10, pik11, pik12, pik13])
        self.Kartentypen.append([couer1, couer2, couer3, couer4, couer5, couer6, couer7, couer8, couer9, couer10, couer11, couer12, couer13])
        self.Kartentypen.append([treff1, treff2, treff3, treff4, treff5, treff6, treff7, treff8, treff9, treff10, treff11, treff12, treff13])
        self.Kartentypen.append([karro1, karro2, karro3, karro4, karro5, karro6, karro7, karro8, karro9, karro10, karro11, karro12, karro13])




